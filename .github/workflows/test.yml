name: Test

on: [push]

#
# Creation of Quake shareware .pak archives
# https://www.doomworld.com/idgames/idstuff/quake/quake106
#
# curl -JOL 'https://www.quaddicted.com/files/idgames/idstuff/quake/quake106.zip'
# tar -xf quake106.zip resource.1
# tar -xf resource.1 ID1/PAK0.PAK
# mv ID1 id1
# mv id1/PAK0.PAK id1/pak0.pak
# tar -czf quake106_pak0.tar.gz id1/pak0.pak
# zip -r quake106_pak0.zip id1/pak0.pak
#

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: HTML to PNG
        run: |
          wget -q https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-2/wkhtmltox_0.12.6.1-2.jammy_amd64.deb
          sudo apt-get install wkhtmltox_0.12.6.1-2.jammy_amd64.deb
          mkdir artifacts
          wkhtmltoimage https://www.zeenko.tech/litevna artifacts/litevna.png

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: artifacts
          compression-level: 0

    # runs-on: ubuntu-22.04
    # steps:
    #   - name: shell color test
    #     run: |
    #       echo -e "\n\033[1;31m 1234567890 \033[0m"
    #       export TERM=xterm-color
    #       echo -e "\n\033[1;31m 1234567890 \033[0m"

    # runs-on: ubuntu-22.04
    # steps:
    #   - name: Install dependencies
    #     run: |
    #       sudo pip3 install yt-dlp
    #       sudo apt update
    #       sudo apt install ffmpeg

    #   - name: Download
    #     run: |
    #       # yt-dlp -v 'https://???.m3u8'
    #       git clone https://github.com/mikekazakov/nimble-commander.git

    #   - name: Save artifact
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: nc
    #       path: .
    #       compression-level: 0

    # runs-on: ubuntu-24.04
    # steps:
    #   - uses: actions/checkout@v4

    #   - name: Install Dependencies
    #     run: |
    #       sudo apt update
    #       sudo apt install libsdl2-dev

    #   - name: Build SDL2 Test
    #     run: |
    #       cd tests/sdl2
    #       cmake -S . -B build
    #       cmake --build build
    #       ./build/bmp

    # runs-on: windows-2022
    # steps:
    #   - uses: microsoft/setup-msbuild@v1

    #   - name: Build cicdec
    #     run: |
    #       git clone --depth=1 https://github.com/Bioruebe/cicdec.git
    #       msbuild cicdec\cicdec.sln -t:restore -p:RestorePackagesConfig=true
    #       msbuild cicdec\cicdec.sln -p:TargetFrameworkVersion=v4.8

    #   - name: Extract RMQInstallerWinter11
    #     run: |
    #       aria2c -q https://icculus.org/remakequake/RMQInstallerWinter11.zip
    #       Expand-Archive RMQInstallerWinter11.zip
    #       Get-ChildItem -Recurse
    #       cicdec\cicdec\bin\Debug\cicdec.exe RMQInstallerWinter11/RMQInstallerWinter11.exe extracted

    #   - name: Save artifact
    #     uses: actions/upload-artifact@v3
    #     with:
    #       name: RMQInstallerWinter11_Repackaged
    #       path: extracted

    #   - name: unittest quakespasm-exp
    #     run: |
    #       cd quakespasm-exp/build/Release
    #       aria2c -q https://github.com/alexey-lysiuk/Dump/releases/download/ci_deps/quake106_pak0.zip
    #       Expand-Archive -Path quake106_pak0.zip
    #       # TODO copy .dlls
    #       .\quakespasm-exp.exe "+map e1m1; wait; lua dofile('scripts/edicts.lua') secrets() monsters() teleports(); wait; quit"
    # runs-on: ubuntu-22.04
    # steps:
    #   - name: Download speed test
    #     run: wget http://icculus.org/remakequake/RMQInstallerWinter11.zip

    #   - name: Save artifact
    #     uses: actions/upload-artifact@v3
    #     with:
    #       name: RMQInstallerWinter11_GH
    #       path: .
    #       if-no-files-found: ignore

      # - name: build quakespasm-exp
      #   run: |
      #     sudo apt update && sudo apt install libsdl2-dev
      #     git clone --depth=1 https://github.com/alexey-lysiuk/quakespasm-exp.git
      #     cd quakespasm-exp
      #     cmake -DCMAKE_C_FLAGS="-Wall -Wno-trigraphs" -S . -B build
      #     cmake --build build --parallel 3

    #  - name: unittest quakespasm-exp
    #    run: |
    #      cd quakespasm-exp/build
    #      wget -q https://github.com/alexey-lysiuk/Dump/releases/download/ci_deps/quake106_pak0.tar.gz
    #      tar -xf quake106_pak0.tar.gz
    #      ./quakespasm-exp -dedicated "+deathmatch 0; map e1m1; lua dofile('scripts/edicts.lua') secrets() monsters() teleports(); quit"

    # runs-on: windows-2022
    # steps:
    #   - name: build quakespasm-exp
    #     run: |
    #       git clone --depth=1 https://github.com/alexey-lysiuk/quakespasm-exp.git
    #       cd quakespasm-exp
    #       cmake -S . -B build
    #       cmake --build build --config Release --parallel 3

    #   - name: unittest quakespasm-exp
    #     run: |
    #       cd quakespasm-exp/build/Release
    #       aria2c -q https://github.com/alexey-lysiuk/Dump/releases/download/ci_deps/quake106_pak0.zip
    #       Expand-Archive -Path quake106_pak0.zip
    #       # TODO copy .dlls
    #       .\quakespasm-exp.exe "+map e1m1; wait; lua dofile('scripts/edicts.lua') secrets() monsters() teleports(); wait; quit"

    # runs-on: macos-12
    # steps:
    #   - name: Vulkan-Loader #1276 macOS cross-compilation
    #     run: |
    #       curl -JOL 'https://github.com/leetal/ios-cmake/raw/547143849a0965813c40e3a8db286edf1d7667f2/ios.toolchain.cmake'

    #       curl -JOL 'https://github.com/KhronosGroup/Vulkan-Headers/archive/refs/tags/v1.3.261.tar.gz'
    #       tar -xf Vulkan-Headers-1.3.261.tar.gz
    #       cd Vulkan-Headers-1.3.261
    #       cmake -DCMAKE_TOOLCHAIN_FILE=../ios.toolchain.cmake -DPLATFORM=MAC_ARM64 -DCMAKE_INSTALL_PREFIX=../vkheaders-install -B build -S .
    #       cd build
    #       make install
    #       cd ../..

    #       curl -JOL 'https://github.com/charles-lunarg/Vulkan-Loader/archive/refs/heads/support_apple_clang_compiler.zip'
    #       unzip Vulkan-Loader-support_apple_clang_compiler.zip
    #       cd Vulkan-Loader-support_apple_clang_compiler
    #       cmake -DCMAKE_TOOLCHAIN_FILE=../ios.toolchain.cmake -DPLATFORM=MAC_ARM64 -DVulkanHeaders_DIR=../vkheaders-install/share/cmake/VulkanHeaders -B build -S .
    #       cd build
    #       make


    # runs-on: ubuntu-22.04
    # steps:
    #   - name: build quakespasm .pak file
    #     run: |
    #       git clone --depth=1 https://github.com/sezero/quakespasm.git
    #       cd quakespasm/Misc/qs_pak
    #       make

    #   - name: upload quakespasm .pak file
    #     uses: actions/upload-artifact@v3
    #     with:
    #       path: quakespasm/Misc/qs_pak
    #       name: quakespasm-pak

#     runs-on: macos-12
#     steps:
#     - name: download
#       run: curl -JOL https://gitlab.com/api/v4/projects/4207231/packages/generic/graphviz-releases/8.1.0/graphviz-8.1.0.tar.gz
#
#     - name: extract
#       run: tar -xvf graphviz-8.1.0.tar.gz
#
#     - name: configure
#       working-directory: graphviz-8.1.0
#       run: ./configure --disable-dependency-tracking
#
#     - name: build
#       working-directory: graphviz-8.1.0
#       run: make -j3
#
#     - name: install
#       working-directory: graphviz-8.1.0
#       run: make DESTDIR=$(pwd)/../graphviz install
#
#     - name: list
#       run: ls -lR graphviz
#
#     - name: test
#       run: ./graphviz/usr/local/bin/dot --help
